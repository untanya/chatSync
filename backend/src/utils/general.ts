import {EntityMetadata, EntityProperty, SqlEntityRepository } from "@mikro-orm/mysql";
import { DateTime } from "luxon"

/**
 * Fonction pour r√©cup√©rer dynamiquement les champs obligatoires d'une entit√© avec MikroORM
 */
export async function getRequiredFields<T extends object>(repo: SqlEntityRepository<T>): Promise<string[]> {
    const em = repo.getEntityManager(); // ‚úÖ Obtenir l'EntityManager
    
    // üî• R√©cup√©ration du nom de l'entit√© √† partir du repository
    const entityName = repo.getEntityName(); // Exemple: "UserRepository" ‚Üí "User"

    const metadata: EntityMetadata | undefined = em.getMetadata().get(entityName);

    if (!metadata) {
        throw new Error(`Impossible de r√©cup√©rer les m√©tadonn√©es de l'entit√© ${entityName}.`);
    }

    return Object.keys(metadata.properties).filter((key) => {
        const prop: EntityProperty = metadata.properties[key];
        return !prop.nullable && !prop.primary; // üî• Exclure les cl√©s primaires et champs optionnels
    });
}

export function formatDateForMySQL(dateString: string): string {
    return DateTime.fromISO(dateString).toFormat('yyyy-MM-dd HH:mm:ss');
}